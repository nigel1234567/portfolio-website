*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    list-style: none;
}

// Declare variables in root
:root{
    --color-primary: #191d2b;
    --color-secondary: #27AE60;
    --color-white: #FFFFFF;
    --color-black: #000;
    --color-grey-1: #dbe1e8;
    --color-grey-2: #b2becd;
    --color-grey-3: #6c7983;
    --color-grey-4: #454e56;
    --color-grey-5: #2a2e35;
    --color-grey-6: #12181b;
    --br-sm-2: 14px;
    --box-shadow-1: 0 3px 15px rgba(0,0,0,.3);
}


body{
    // Utilise color variables
    background-color: var(--color-primary);
    font-family: 'Poppins', sans-serif;
    font-size: 1.1rem;
    color: var(--color-white);
    transition: all .4s ease-in-out;
}

a{ 
    display: inline-block;
    text-decoration: none;
    color: inherit;
    font-family: inherit;
}

header{
    height: 100vh;
    color: var(--color-white);
    overflow: hidden;
}

section{
    min-height: 100vh;
    width: 100%;
    position: absolute;
    left: 0;
    top: 0;
    padding: 3rem 18rem;
}

.section{
    // Make sections offscreen by default
    transform: translateY(-100%);
    transition: all .4s ease-in-out;
    background-color: var(--color-primary);
}

.sec1{
    // Default display: none, because we only want to see the sections when we switch into the section
    display: none;
    transform: translateY(0) scale(1);
}

.sec2{
    // Default display: none, because we only want to see the sections when we switch into the section
    display: none;
    transform: translateY(0) scale(1);
}
.sec3{
    // Default display: none, because we only want to see the sections when we switch into the section
    display: none;
    transform: translateY(0) scale(1);
}
.sec4{
    // Default display: none, because we only want to see the sections when we switch into the section
    display: none;
    transform: translateY(0) scale(1);
}

.sec5{
    // Default display: none, because we only want to see the sections when we switch into the section
    display: none;
    transform: translateY(0) scale(1);
}

// Display active sections when clicked
.active{
    display: block;
    animation: scaleAnim 1s ease-in-out; // scaleAnim is name of animation
    @keyframes scaleAnim {
        0%{
            transform: translateY(-100%) scaleY(0)
        }
        100%{
            transform: translateY(0) scaleY(1)
        }
    }
}

// To format button that is activated
.active-btn {
    background-color: var(--color-secondary) !important;
    transition: all .4s ease-in-out;
    i{
        color: var(--color-white) !important;
    }
}

// Controls
.controls{
    position: fixed;
    z-index: 10;
    top: 50%;
    right: 3%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    transform: translateY(-50%);
    .control{
        padding: 1rem;
        cursor: pointer;
        background-color: var(--color-grey-4);
        width: 55px;
        height: 55px;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        margin: .7rem 0;
        box-shadow: var(--box-shadow-1);
        // resize icon
        i{
            font-size: 1.2rem;
            color: var(--color-grey-2);
            // When I click, the icon should not react to the click
            pointer-events: none;
        }
    }
}

// Header content
.header-content{
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    height: 100%;
    .left-header{
        display: flex;
        align-items: center;
        position: relative;
        .h-shape{
            transition: all .4s ease-in-out;
            width: 65%;
            height: 100%;
            background-color: var(--color-secondary);
            position: absolute;
            left: 0;
            top: 0;
            z-index: -1;
            clip-path: polygon(0 0, 46% 0, 79% 100%, 0% 100%);
        }
        .image{
            border-radius: var(--br-sm-2);
            height: 90%;
            width: 68%;
            margin-left: 4rem;
            background-color: var(--color-black);
            transition: all .4s ease-in-out;
            img{
                width: 100%;
                height: 100%;
                object-fit: cover;
                transition: all .4s ease-in-out;
                filter: grayscale(100%);
                &:hover{
                    filter: grayscale(0); // When hover over image, change to colour
                }
            }
        }
    }

    .right-header{
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding-right: 18rem;
        .name{
            font-size: 3rem;
            span{
                color: var(--color-secondary);
            }
        }
        p{
            margin: 1.5rem 0;
            line-height: 2rem;
        }
    }
}

// Independent components
.btn-con{
    display: flex;
    align-self: flex-start;
}
.main-btn{
    border-radius: 30px;
    color: inherit;
    font-weight: 600;
    position: relative;
    border: 1px solid var(--color-secondary);
    display: flex;
    align-self: flex-start;
    align-items: center;
    overflow: hidden;
    .btn-text{
        padding: 0 2rem;
    }
    .btn-icon{
        background-color: var(--color-secondary);
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        padding: 1rem;
    }
    &::before{
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        transform: translateX(100%); // Direction of green slider
        transition: all .4s ease-in-out;
        z-index: -1; // Move position of button to back
    }
    &:hover{ // While hovering, the CV button has green highlighting slider effect
        &::before{ // Before hover
            width: 100%;
            height: 100%;
            background-color: var(--color-secondary);
            transform: translateX(0); // Go back to default 0
            transition: all .4s ease-in-out;
        }
    }
}